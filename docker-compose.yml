version: '3.8'

services:
  # Nginx Service
  nginx:
    image: nginx:alpine
    container_name: aiwp-nginx
    restart: unless-stopped
    ports:
      - "8000:80"
      - "443:443"
    volumes:
      - ./src/Backend:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - aiwp-network

  # PHP Application Service
  app:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    container_name: aiwp-app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./src/Backend:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - aiwp-network
    depends_on:
      - db
      - redis

  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: aiwp-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_DATABASE:-aiwp_db}
      POSTGRES_USER: ${DB_USERNAME:-aiwp_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secret}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - aiwp-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: aiwp-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    networks:
      - aiwp-network

  # Queue Worker
  queue:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    container_name: aiwp-queue
    restart: unless-stopped
    working_dir: /var/www
    command: php artisan queue:work --sleep=3 --tries=3
    volumes:
      - ./src/Backend:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    depends_on:
      - app
      - db
      - redis
    networks:
      - aiwp-network

  # Scheduler
  scheduler:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    container_name: aiwp-scheduler
    restart: unless-stopped
    working_dir: /var/www
    command: /bin/sh -c "while true; do php artisan schedule:run --verbose --no-interaction & sleep 60; done"
    volumes:
      - ./src/Backend:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    depends_on:
      - app
      - db
    networks:
      - aiwp-network

  # Next.js Frontend
  frontend:
    build:
      context: ./src/Frontend
      dockerfile: Dockerfile
    container_name: aiwp-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8000/api
    volumes:
      - ./src/Frontend:/app
      - /app/node_modules
      - /app/.next
    networks:
      - aiwp-network

  # phpMyAdmin (optional, for database management)
  phppgadmin:
    image: dpage/pgadmin4:latest
    container_name: aiwp-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@aiwp.local}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
    ports:
      - "5050:80"
    depends_on:
      - db
    networks:
      - aiwp-network

# Networks
networks:
  aiwp-network:
    driver: bridge

# Volumes
volumes:
  postgres-data:
    driver: local
  redis-data:
    driver: local